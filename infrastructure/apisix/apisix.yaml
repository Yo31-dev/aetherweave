# APISIX Declarative Configuration
# This file defines all routes, upstreams, and plugins
# Synchronized to etcd via ADC (APISIX Declarative CLI) on startup
# Changes require: docker-compose up -d --force-recreate apisix-sync

routes:
  # Route 1: User Service - CRUD operations
  - id: 1
    name: user-service-users
    uris:
      - /api/v1/users
      - /api/v1/users/*
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
    upstream_id: 1
    plugins:
      openid-connect:
        client_id: aetherweave-api
        client_secret: CHANGE_ME_IN_PRODUCTION
        discovery: http://keycloak:8080/realms/aetherweave/.well-known/openid-configuration
        scope: openid profile email
        bearer_only: true
        realm: aetherweave
        use_jwks: true
        token_signing_alg_values_expected: RS256
      proxy-rewrite:
        regex_uri:
          - "^/api/v1/users(.*)"
          - "/v1.0/invoke/user-service/method/users$1"
      cors:
        allow_origins: "**"
        allow_methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
        allow_headers: "Authorization,Content-Type,X-Requested-With,X-Dapr-App-Id"
        expose_headers: "Content-Length,Content-Type"
        max_age: 86400
        allow_credential: true
      zipkin:
        endpoint: http://jaeger:9411/api/v2/spans
        sample_ratio: 1
        service_name: apisix-gateway

  # Route 2: User Service - Health endpoint (protected)
  - id: 2
    name: user-service-health
    uri: /api/v1/health
    methods:
      - GET
    upstream_id: 1
    plugins:
      openid-connect:
        client_id: aetherweave-api
        client_secret: CHANGE_ME_IN_PRODUCTION
        discovery: http://keycloak:8080/realms/aetherweave/.well-known/openid-configuration
        scope: openid profile email
        bearer_only: true
        realm: aetherweave
        use_jwks: true
        token_signing_alg_values_expected: RS256
      proxy-rewrite:
        uri: /v1.0/invoke/user-service/method/health
      cors:
        allow_origins: "**"
        allow_methods: "GET,OPTIONS"
        allow_headers: "Authorization,Content-Type"
        max_age: 86400
      zipkin:
        endpoint: http://jaeger:9411/api/v2/spans
        sample_ratio: 1
        service_name: apisix-gateway

  # Route 3: User Service - Roles CRUD
  - id: 3
    name: user-service-roles
    uris:
      - /api/v1/roles
      - /api/v1/roles/*
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
    upstream_id: 1
    plugins:
      openid-connect:
        client_id: aetherweave-api
        client_secret: CHANGE_ME_IN_PRODUCTION
        discovery: http://keycloak:8080/realms/aetherweave/.well-known/openid-configuration
        scope: openid profile email
        bearer_only: true
        realm: aetherweave
        use_jwks: true
        token_signing_alg_values_expected: RS256
      proxy-rewrite:
        regex_uri:
          - "^/api/v1/roles(.*)"
          - "/v1.0/invoke/user-service/method/roles$1"
      cors:
        allow_origins: "**"
        allow_methods: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
        allow_headers: "Authorization,Content-Type,X-Requested-With,X-Dapr-App-Id"
        expose_headers: "Content-Length,Content-Type"
        max_age: 86400
        allow_credential: true
      zipkin:
        endpoint: http://jaeger:9411/api/v2/spans
        sample_ratio: 1
        service_name: apisix-gateway

  # Route 4: Gateway Health Check (public, no auth)
  - id: 4
    name: gateway-health
    uri: /health
    methods:
      - GET
    plugins:
      serverless-pre-function:
        phase: rewrite
        functions:
          - 'return function(conf, ctx) ngx.say("OK"); ngx.exit(200); end'

  # Route 5: Portal Frontend (public, no auth)
  - id: 5
    name: portal-frontend
    uris:
      - /
      - /*
    methods:
      - GET
      - OPTIONS
    upstream_id: 2
    priority: 1
    plugins:
      cors:
        allow_origins: "**"
        allow_methods: "GET,OPTIONS"
        allow_headers: "Content-Type,X-Requested-With"
        max_age: 86400

upstreams:
  # Upstream 1: User Service via Dapr sidecar
  - id: 1
    name: user-service-upstream
    type: roundrobin
    nodes:
      "user-service:3500": 1
    timeout:
      connect: 6
      send: 30
      read: 30

  # Upstream 2: Portal Frontend
  - id: 2
    name: portal-upstream
    type: roundrobin
    nodes:
      "aetherweave-portal:80": 1
    timeout:
      connect: 6
      send: 30
      read: 30

#END

http:
  # Middlewares
  middlewares:
    # JWT Authentication avec Keycloak
    jwt-auth:
      forwardAuth:
        address: "http://keycloak:8080/realms/microservices/protocol/openid-connect/userinfo"
        authRequestHeaders:
          - "Authorization"
        trustForwardHeader: true

    # CORS pour les APIs
    api-cors:
      headers:
        accessControlAllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
        accessControlAllowOriginList:
          - "*"
        accessControlAllowHeaders:
          - "*"
        accessControlExposeHeaders:
          - "*"
        accessControlMaxAge: 100
        addVaryHeader: true

    # Rate limiting
    api-ratelimit:
      rateLimit:
        average: 100
        burst: 50
        period: 1s

    # Strip /api prefix avant de forward à Dapr
    strip-api-prefix:
      stripPrefix:
        prefixes:
          - "/api"

  # Routers pour les services via Dapr
  routers:
    # Route générique vers les services via Dapr
    api-services:
      rule: "Host(`api.aetherweave.local`) && PathPrefix(`/api/`)"
      entryPoints:
        - web
      middlewares:
        - api-cors
        - jwt-auth
        - strip-api-prefix
        - api-ratelimit
      service: dapr-gateway

    # Health check public (pas de JWT)
    api-health:
      rule: "Host(`api.aetherweave.local`) && Path(`/health`)"
      entryPoints:
        - web
      middlewares:
        - api-cors
      service: dapr-gateway

  # Services
  services:
    # Gateway Dapr qui dispatche vers les services
    dapr-gateway:
      loadBalancer:
        servers:
          # Liste des sidecars Dapr des services
          # Format: http://<service-name>:<dapr-http-port>
          # Exemple pour user-service:
          # - url: "http://user-service:3500"
          
          # Placeholder - sera mis à jour quand tu ajoutes des services
          - url: "http://localhost:3500"
        healthCheck:
          path: "/v1.0/healthz"
          interval: "10s"
          timeout: "3s"